package com.aidou.dao.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TbUserRelationExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_user_relation
     *
     * @mbggenerated Thu Nov 14 15:06:09 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_user_relation
     *
     * @mbggenerated Thu Nov 14 15:06:09 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_user_relation
     *
     * @mbggenerated Thu Nov 14 15:06:09 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_relation
     *
     * @mbggenerated Thu Nov 14 15:06:09 CST 2019
     */
    public TbUserRelationExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_relation
     *
     * @mbggenerated Thu Nov 14 15:06:09 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_relation
     *
     * @mbggenerated Thu Nov 14 15:06:09 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_relation
     *
     * @mbggenerated Thu Nov 14 15:06:09 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_relation
     *
     * @mbggenerated Thu Nov 14 15:06:09 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_relation
     *
     * @mbggenerated Thu Nov 14 15:06:09 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_relation
     *
     * @mbggenerated Thu Nov 14 15:06:09 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_relation
     *
     * @mbggenerated Thu Nov 14 15:06:09 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_relation
     *
     * @mbggenerated Thu Nov 14 15:06:09 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_relation
     *
     * @mbggenerated Thu Nov 14 15:06:09 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_relation
     *
     * @mbggenerated Thu Nov 14 15:06:09 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_user_relation
     *
     * @mbggenerated Thu Nov 14 15:06:09 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andSUserIdIsNull() {
            addCriterion("s_user_id is null");
            return (Criteria) this;
        }

        public Criteria andSUserIdIsNotNull() {
            addCriterion("s_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andSUserIdEqualTo(Long value) {
            addCriterion("s_user_id =", value, "sUserId");
            return (Criteria) this;
        }

        public Criteria andSUserIdNotEqualTo(Long value) {
            addCriterion("s_user_id <>", value, "sUserId");
            return (Criteria) this;
        }

        public Criteria andSUserIdGreaterThan(Long value) {
            addCriterion("s_user_id >", value, "sUserId");
            return (Criteria) this;
        }

        public Criteria andSUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("s_user_id >=", value, "sUserId");
            return (Criteria) this;
        }

        public Criteria andSUserIdLessThan(Long value) {
            addCriterion("s_user_id <", value, "sUserId");
            return (Criteria) this;
        }

        public Criteria andSUserIdLessThanOrEqualTo(Long value) {
            addCriterion("s_user_id <=", value, "sUserId");
            return (Criteria) this;
        }

        public Criteria andSUserIdIn(List<Long> values) {
            addCriterion("s_user_id in", values, "sUserId");
            return (Criteria) this;
        }

        public Criteria andSUserIdNotIn(List<Long> values) {
            addCriterion("s_user_id not in", values, "sUserId");
            return (Criteria) this;
        }

        public Criteria andSUserIdBetween(Long value1, Long value2) {
            addCriterion("s_user_id between", value1, value2, "sUserId");
            return (Criteria) this;
        }

        public Criteria andSUserIdNotBetween(Long value1, Long value2) {
            addCriterion("s_user_id not between", value1, value2, "sUserId");
            return (Criteria) this;
        }

        public Criteria andSUnameIsNull() {
            addCriterion("s_uname is null");
            return (Criteria) this;
        }

        public Criteria andSUnameIsNotNull() {
            addCriterion("s_uname is not null");
            return (Criteria) this;
        }

        public Criteria andSUnameEqualTo(String value) {
            addCriterion("s_uname =", value, "sUname");
            return (Criteria) this;
        }

        public Criteria andSUnameNotEqualTo(String value) {
            addCriterion("s_uname <>", value, "sUname");
            return (Criteria) this;
        }

        public Criteria andSUnameGreaterThan(String value) {
            addCriterion("s_uname >", value, "sUname");
            return (Criteria) this;
        }

        public Criteria andSUnameGreaterThanOrEqualTo(String value) {
            addCriterion("s_uname >=", value, "sUname");
            return (Criteria) this;
        }

        public Criteria andSUnameLessThan(String value) {
            addCriterion("s_uname <", value, "sUname");
            return (Criteria) this;
        }

        public Criteria andSUnameLessThanOrEqualTo(String value) {
            addCriterion("s_uname <=", value, "sUname");
            return (Criteria) this;
        }

        public Criteria andSUnameLike(String value) {
            addCriterion("s_uname like", value, "sUname");
            return (Criteria) this;
        }

        public Criteria andSUnameNotLike(String value) {
            addCriterion("s_uname not like", value, "sUname");
            return (Criteria) this;
        }

        public Criteria andSUnameIn(List<String> values) {
            addCriterion("s_uname in", values, "sUname");
            return (Criteria) this;
        }

        public Criteria andSUnameNotIn(List<String> values) {
            addCriterion("s_uname not in", values, "sUname");
            return (Criteria) this;
        }

        public Criteria andSUnameBetween(String value1, String value2) {
            addCriterion("s_uname between", value1, value2, "sUname");
            return (Criteria) this;
        }

        public Criteria andSUnameNotBetween(String value1, String value2) {
            addCriterion("s_uname not between", value1, value2, "sUname");
            return (Criteria) this;
        }

        public Criteria andTUserIdIsNull() {
            addCriterion("t_user_id is null");
            return (Criteria) this;
        }

        public Criteria andTUserIdIsNotNull() {
            addCriterion("t_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andTUserIdEqualTo(Long value) {
            addCriterion("t_user_id =", value, "tUserId");
            return (Criteria) this;
        }

        public Criteria andTUserIdNotEqualTo(Long value) {
            addCriterion("t_user_id <>", value, "tUserId");
            return (Criteria) this;
        }

        public Criteria andTUserIdGreaterThan(Long value) {
            addCriterion("t_user_id >", value, "tUserId");
            return (Criteria) this;
        }

        public Criteria andTUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("t_user_id >=", value, "tUserId");
            return (Criteria) this;
        }

        public Criteria andTUserIdLessThan(Long value) {
            addCriterion("t_user_id <", value, "tUserId");
            return (Criteria) this;
        }

        public Criteria andTUserIdLessThanOrEqualTo(Long value) {
            addCriterion("t_user_id <=", value, "tUserId");
            return (Criteria) this;
        }

        public Criteria andTUserIdIn(List<Long> values) {
            addCriterion("t_user_id in", values, "tUserId");
            return (Criteria) this;
        }

        public Criteria andTUserIdNotIn(List<Long> values) {
            addCriterion("t_user_id not in", values, "tUserId");
            return (Criteria) this;
        }

        public Criteria andTUserIdBetween(Long value1, Long value2) {
            addCriterion("t_user_id between", value1, value2, "tUserId");
            return (Criteria) this;
        }

        public Criteria andTUserIdNotBetween(Long value1, Long value2) {
            addCriterion("t_user_id not between", value1, value2, "tUserId");
            return (Criteria) this;
        }

        public Criteria andTUnameIsNull() {
            addCriterion("t_uname is null");
            return (Criteria) this;
        }

        public Criteria andTUnameIsNotNull() {
            addCriterion("t_uname is not null");
            return (Criteria) this;
        }

        public Criteria andTUnameEqualTo(String value) {
            addCriterion("t_uname =", value, "tUname");
            return (Criteria) this;
        }

        public Criteria andTUnameNotEqualTo(String value) {
            addCriterion("t_uname <>", value, "tUname");
            return (Criteria) this;
        }

        public Criteria andTUnameGreaterThan(String value) {
            addCriterion("t_uname >", value, "tUname");
            return (Criteria) this;
        }

        public Criteria andTUnameGreaterThanOrEqualTo(String value) {
            addCriterion("t_uname >=", value, "tUname");
            return (Criteria) this;
        }

        public Criteria andTUnameLessThan(String value) {
            addCriterion("t_uname <", value, "tUname");
            return (Criteria) this;
        }

        public Criteria andTUnameLessThanOrEqualTo(String value) {
            addCriterion("t_uname <=", value, "tUname");
            return (Criteria) this;
        }

        public Criteria andTUnameLike(String value) {
            addCriterion("t_uname like", value, "tUname");
            return (Criteria) this;
        }

        public Criteria andTUnameNotLike(String value) {
            addCriterion("t_uname not like", value, "tUname");
            return (Criteria) this;
        }

        public Criteria andTUnameIn(List<String> values) {
            addCriterion("t_uname in", values, "tUname");
            return (Criteria) this;
        }

        public Criteria andTUnameNotIn(List<String> values) {
            addCriterion("t_uname not in", values, "tUname");
            return (Criteria) this;
        }

        public Criteria andTUnameBetween(String value1, String value2) {
            addCriterion("t_uname between", value1, value2, "tUname");
            return (Criteria) this;
        }

        public Criteria andTUnameNotBetween(String value1, String value2) {
            addCriterion("t_uname not between", value1, value2, "tUname");
            return (Criteria) this;
        }

        public Criteria andCreatedIsNull() {
            addCriterion("created is null");
            return (Criteria) this;
        }

        public Criteria andCreatedIsNotNull() {
            addCriterion("created is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedEqualTo(Date value) {
            addCriterion("created =", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotEqualTo(Date value) {
            addCriterion("created <>", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedGreaterThan(Date value) {
            addCriterion("created >", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedGreaterThanOrEqualTo(Date value) {
            addCriterion("created >=", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedLessThan(Date value) {
            addCriterion("created <", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedLessThanOrEqualTo(Date value) {
            addCriterion("created <=", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedIn(List<Date> values) {
            addCriterion("created in", values, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotIn(List<Date> values) {
            addCriterion("created not in", values, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedBetween(Date value1, Date value2) {
            addCriterion("created between", value1, value2, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotBetween(Date value1, Date value2) {
            addCriterion("created not between", value1, value2, "created");
            return (Criteria) this;
        }

        public Criteria andUpdatedIsNull() {
            addCriterion("updated is null");
            return (Criteria) this;
        }

        public Criteria andUpdatedIsNotNull() {
            addCriterion("updated is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatedEqualTo(Date value) {
            addCriterion("updated =", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedNotEqualTo(Date value) {
            addCriterion("updated <>", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedGreaterThan(Date value) {
            addCriterion("updated >", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedGreaterThanOrEqualTo(Date value) {
            addCriterion("updated >=", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedLessThan(Date value) {
            addCriterion("updated <", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedLessThanOrEqualTo(Date value) {
            addCriterion("updated <=", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedIn(List<Date> values) {
            addCriterion("updated in", values, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedNotIn(List<Date> values) {
            addCriterion("updated not in", values, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedBetween(Date value1, Date value2) {
            addCriterion("updated between", value1, value2, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedNotBetween(Date value1, Date value2) {
            addCriterion("updated not between", value1, value2, "updated");
            return (Criteria) this;
        }

        public Criteria andDpStatusIsNull() {
            addCriterion("dp_status is null");
            return (Criteria) this;
        }

        public Criteria andDpStatusIsNotNull() {
            addCriterion("dp_status is not null");
            return (Criteria) this;
        }

        public Criteria andDpStatusEqualTo(Integer value) {
            addCriterion("dp_status =", value, "dpStatus");
            return (Criteria) this;
        }

        public Criteria andDpStatusNotEqualTo(Integer value) {
            addCriterion("dp_status <>", value, "dpStatus");
            return (Criteria) this;
        }

        public Criteria andDpStatusGreaterThan(Integer value) {
            addCriterion("dp_status >", value, "dpStatus");
            return (Criteria) this;
        }

        public Criteria andDpStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("dp_status >=", value, "dpStatus");
            return (Criteria) this;
        }

        public Criteria andDpStatusLessThan(Integer value) {
            addCriterion("dp_status <", value, "dpStatus");
            return (Criteria) this;
        }

        public Criteria andDpStatusLessThanOrEqualTo(Integer value) {
            addCriterion("dp_status <=", value, "dpStatus");
            return (Criteria) this;
        }

        public Criteria andDpStatusIn(List<Integer> values) {
            addCriterion("dp_status in", values, "dpStatus");
            return (Criteria) this;
        }

        public Criteria andDpStatusNotIn(List<Integer> values) {
            addCriterion("dp_status not in", values, "dpStatus");
            return (Criteria) this;
        }

        public Criteria andDpStatusBetween(Integer value1, Integer value2) {
            addCriterion("dp_status between", value1, value2, "dpStatus");
            return (Criteria) this;
        }

        public Criteria andDpStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("dp_status not between", value1, value2, "dpStatus");
            return (Criteria) this;
        }

        public Criteria andRemarksIsNull() {
            addCriterion("remarks is null");
            return (Criteria) this;
        }

        public Criteria andRemarksIsNotNull() {
            addCriterion("remarks is not null");
            return (Criteria) this;
        }

        public Criteria andRemarksEqualTo(String value) {
            addCriterion("remarks =", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksNotEqualTo(String value) {
            addCriterion("remarks <>", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksGreaterThan(String value) {
            addCriterion("remarks >", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksGreaterThanOrEqualTo(String value) {
            addCriterion("remarks >=", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksLessThan(String value) {
            addCriterion("remarks <", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksLessThanOrEqualTo(String value) {
            addCriterion("remarks <=", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksLike(String value) {
            addCriterion("remarks like", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksNotLike(String value) {
            addCriterion("remarks not like", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksIn(List<String> values) {
            addCriterion("remarks in", values, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksNotIn(List<String> values) {
            addCriterion("remarks not in", values, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksBetween(String value1, String value2) {
            addCriterion("remarks between", value1, value2, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksNotBetween(String value1, String value2) {
            addCriterion("remarks not between", value1, value2, "remarks");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_user_relation
     *
     * @mbggenerated do_not_delete_during_merge Thu Nov 14 15:06:09 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_user_relation
     *
     * @mbggenerated Thu Nov 14 15:06:09 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}